#!/usr/bin/env bash
set -euo pipefail

# ./run install
if [ "$1" == "install" ]; then
    python3 -m pip install --user -r requirements.txt
    exit 0

# ./run test
elif [ "$1" == "test" ]; then
    # Run pytest quietly, produce coverage file and JSON report
    pytest --maxfail=1 --disable-warnings -q \
        --cov=src/scorer/metrics --cov-report=term \
        --json-report --json-report-file=pytest-report.json > pytest.out || true

    # Extract coverage percentage from term output
    COVERAGE=$(grep -Eo 'TOTAL\s+[0-9]+\s+[0-9]+\s+[0-9]+%' pytest.out | tail -1 | grep -Eo '[0-9]+')

    # Count tests passed/failed
    PASSED=$(grep -Eo '[0-9]+ passed' pytest.out | grep -Eo '[0-9]+')
    FAILED=$(grep -Eo '[0-9]+ failed' pytest.out | grep -Eo '[0-9]+')

    [ -z "$PASSED" ] && PASSED=0
    [ -z "$FAILED" ] && FAILED=0
    [ -z "$COVERAGE" ] && COVERAGE=0

    echo "$PASSED/$((PASSED + FAILED)) test cases passed. $COVERAGE% line coverage achieved."

    if [ "$FAILED" -eq 0 ] && [ "$COVERAGE" -ge 80 ]; then
        exit 0
    else
        exit 1
    fi

# ./ run URL_FILE
else
    URL_FILE="$1"
    if [ ! -f "$URL_FILE" ]; then
        echo "Error: File not found: $URL_FILE"
        exit 1
    fi
    python3 src/scorer/cli_updated.py "$URL_FILE"
    exit 0
fi